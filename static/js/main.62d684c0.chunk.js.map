{"version":3,"sources":["components/ItemsExpenses/itemsExpenses.module.scss","components/ItemsExpenses/AddExpensesWindow/AddExpensesWindow.module.scss","components/Header/Header.module.scss","redusers/addExpensesIsOpen.ts","redusers/addIncomesWindow.ts","redusers/incomesReducer.ts","redusers/inputExpenseAmountWindow.ts","redusers/itemsExpensesReducer.ts","redusers/rootReducer.ts","store.js","components/ItemsExpenses/AddExpenses/AddExpenses.tsx","components/ItemsExpenses/MainDiagram/MainDiagram.tsx","actions/actions.ts","components/ItemsExpenses/AddExpensesWindow/AddExpensesWindow.tsx","components/ItemsExpenses/InputOfExpenseAmount/InputOfExpenseAmount.tsx","components/AddIncomesWindow/AddIncomesWindow.tsx","components/ItemsExpenses/ItemsExpenses.tsx","components/Expenses/Expenses.tsx","components/Header/Header.tsx","App.tsx","index.ts","components/ItemsExpenses/InputOfExpenseAmount/InputOfExpenseAmount.module.scss","components/Expenses/Expenses.module.scss"],"names":["module","exports","initialState","addExpensesIsOpen","isOpen","incomes","moneyIncome","id","comment","inputExpenseAmountWindow","itemsExpenses","expensesName","moneySpend","icon","bgColor","rootReducer","combineReducers","state","action","copyState","type","push","payload","map","item","sum","incomesWindow","incomesList","store","createStore","composeWithDevTools","applyMiddleware","AddExpenses","className","s","src","alt","MainDiagram","useSelector","expensesNames","expensesMoney","expensesColor","e","data","labels","datasets","backgroundColor","hoverBackgroundColor","width","height","options","legend","display","toggleAddExpensesWindow","toggleIncomesWindow","toggleInputExpenseAmountWindow","AddExpensesWindow","dispatch","useDispatch","useState","inputExpensesName","setInputExpensesName","addExpenses","length","alert","onKeyPress","key","onClick","target","Modal","open","Fade","in","timeout","TextField","label","variant","fullWidth","required","placeholder","margin","value","onChange","autoFocus","style","marginTop","Button","size","InputOfExpenseAmount","curentItemId","inputExpenseAmountIsOpen","inputExpensesSum","setInputExpensesSum","parseInt","isNaN","Input","AddIncomesWindow","incomeWindowIsOpen","sumIncome","setSumIncome","commentIncome","setCommentIncome","addIncomeHandler","ItemsExpenses","curentItemForAddSum","setCurentItemForAddSum","handlerForExpensesItem","Expenses","CssBaseline","Container","maxWidth","Paper","elevation","Header","sumExpenses","sumIncomes","AppBar","color","Toolbar","Grid","container","justify","alignItems","App","ReactDOM","render","React","createElement","document","getElementById"],"mappings":"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","file":"static/js/main.62d684c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemsExpenses\":\"itemsExpenses_ItemsExpenses__1gjH0\",\"ItemsExpenses-Diagram\":\"itemsExpenses_ItemsExpenses-Diagram__2urdp\",\"ItemsExpenses-Item\":\"itemsExpenses_ItemsExpenses-Item__3X2w8\",\"ItemsExpenses-WrapForIcon\":\"itemsExpenses_ItemsExpenses-WrapForIcon__3pFdA\",\"ItemsExpenses-Icon\":\"itemsExpenses_ItemsExpenses-Icon__3mS-l\",\"ItemsExpenses-Money\":\"itemsExpenses_ItemsExpenses-Money__17uD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddExpensesWindow-Box\":\"AddExpensesWindow_AddExpensesWindow-Box__1pve6\",\"AddExpensesWindow-CloseIcon\":\"AddExpensesWindow_AddExpensesWindow-CloseIcon__2odHN\",\"AddExpensesWindow-Title\":\"AddExpensesWindow_AddExpensesWindow-Title__1nCzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header-Column\":\"Header_Header-Column__3cyC0\",\"Header-Logo\":\"Header_Header-Logo__3Xbjx\",\"Header-Btn\":\"Header_Header-Btn__3gWAT\",\"Header-Label\":\"Header_Header-Label__MKTkm\"};","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    addExpensesIsOpen: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    addExpensesIsOpen: false,\r\n}\r\n\r\nexport const addExpensesIsOpen = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_ADD_EXPENSES_WINDOW\":\r\n            return { ...state, addExpensesIsOpen: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    isOpen: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isOpen: false,\r\n}\r\n\r\nexport const addIncomesWindow = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_ADD_INCOMES_WINDOW\":\r\n            return { ...state, isOpen: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateIncomeType = {\r\n    incomes: Array<IncomeType>\r\n}\r\n\r\nexport type IncomeType = {\r\n    moneyIncome: number\r\n    id: number\r\n    comment: string\r\n}\r\n\r\nconst initialState: InitialStateIncomeType = {\r\n    incomes: [\r\n        { moneyIncome: 4000, id: 0, comment: 'Заработная плата' },\r\n        { moneyIncome: 1300, id: 1, comment: 'Стипендия' }\r\n    ] as Array<IncomeType>\r\n}\r\n\r\nexport const incomesReducer = (state = initialState, action: ActionsTypes): InitialStateIncomeType => {\r\n    let copyState = [...state.incomes]\r\n    switch (action.type) {\r\n        case \"ADD_INCOME\":\r\n            copyState.push(action.payload)\r\n            return { incomes: [...copyState] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    inputExpenseAmountWindow: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    inputExpenseAmountWindow: false,\r\n}\r\n\r\nexport const inputExpenseAmountWindow = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\":\r\n            return { ...state, inputExpenseAmountWindow: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    itemsExpenses: Array<ItemsExpensesType>\r\n}\r\n\r\nexport type ItemsExpensesType = {\r\n    expensesName: string\r\n    moneySpend: number\r\n    id: number\r\n    icon: string\r\n    bgColor: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    itemsExpenses: [\r\n        { expensesName: \"Продукты\", moneySpend: 10, id: 0, icon: \"https://i.ibb.co/587QCcb/1.png\", bgColor: '#FF6384' },\r\n        { expensesName: \"Кафе\", moneySpend: 20, id: 1, icon: \"https://i.ibb.co/K5vBxYX/2.png\", bgColor: '#36A2EB' },\r\n        { expensesName: \"Досуг\", moneySpend: 100, id: 2, icon: \"https://i.ibb.co/DfSGjwY/3.png\", bgColor: '#FFCE56' },\r\n        { expensesName: \"Транспорт\", moneySpend: 5, id: 3, icon: \"https://i.ibb.co/KwDCn5q/4.png\", bgColor: '#FF1156' },\r\n        { expensesName: \"Здоровье\", moneySpend: 45, id: 4, icon: \"https://i.ibb.co/2MwCWLZ/5.png\", bgColor: '#FF9E56' },\r\n        { expensesName: \"Подарки\", moneySpend: 50, id: 5, icon: \"https://i.ibb.co/7gHHM1r/6.png\", bgColor: '#e01a4b' },\r\n        { expensesName: \"Семья\", moneySpend: 20, id: 6, icon: \"https://i.ibb.co/jz4N7kG/7.png\", bgColor: '#197b94' },\r\n        { expensesName: \"Покупки\", moneySpend: 150, id: 7, icon: \"https://i.ibb.co/jrc4bwQ/8.png\", bgColor: '#c2351f' },\r\n    ] as Array<ItemsExpensesType>\r\n}\r\n\r\nexport const itemsExpensesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    let copyState = [...state.itemsExpenses]\r\n    switch (action.type) {\r\n        case \"ADD_EXPENSE_ITEM\":\r\n            copyState.push(action.payload)\r\n            return { itemsExpenses: [...copyState] }\r\n\r\n        case \"INPUT_EXPENSE_SUM\":\r\n            copyState.map((item) => { if (item.id === action.payload.id) { item.moneySpend += action.payload.sum } })\r\n            return { itemsExpenses: [...copyState] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nimport { combineReducers } from \"redux\";\r\nimport { addExpensesIsOpen } from \"./addExpensesIsOpen\";\r\nimport { addIncomesWindow } from \"./addIncomesWindow\";\r\nimport { incomesReducer } from \"./incomesReducer\";\r\nimport { inputExpenseAmountWindow } from \"./inputExpenseAmountWindow\";\r\nimport { itemsExpensesReducer } from \"./itemsExpensesReducer\"\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    itemsExpenses: itemsExpensesReducer,\r\n    addExpensesIsOpen: addExpensesIsOpen,\r\n    inputExpenseAmountWindow: inputExpenseAmountWindow,\r\n    incomesWindow: addIncomesWindow,\r\n    incomesList: incomesReducer,\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from \"redux\"\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { rootReducer } from \"./redusers/rootReducer\"\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(),\r\n    )\r\n)","import React from 'react'\r\nimport s from \"../itemsExpenses.module.scss\"\r\n\r\n\r\nconst AddExpenses: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s[\"ItemsExpenses-Item\"]}>\r\n            <div className={s[\"ItemsExpenses-Name\"]} >Добавить</div>\r\n            <div className={s[\"ItemsExpenses-WrapForIcon\"]} >\r\n                <img className={s[\"ItemsExpenses-Icon\"]} src={\"https://i.ibb.co/gwF9wSm/plus.png\"} alt={\"icon\"} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddExpenses;\r\n","import { useSelector } from 'react-redux'\r\nimport { RootState } from \"../../../redusers/rootReducer\"\r\n\r\n\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport { ItemsExpensesType } from '../../../redusers/itemsExpensesReducer'\r\n\r\nconst MainDiagram: React.FC = () => {\r\n\r\n    let itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n\r\n    const expensesNames: string[] = []\r\n    const expensesMoney: number[] = []\r\n    const expensesColor: string[] = []\r\n\r\n    itemsExpenses.map(\r\n        (e: ItemsExpensesType) => {\r\n            expensesNames.push(e.expensesName)\r\n            expensesMoney.push(e.moneySpend)\r\n            expensesColor.push(e.bgColor)\r\n        })\r\n\r\n    const data = {\r\n        labels: expensesNames,\r\n        datasets: [{\r\n            data: expensesMoney,\r\n            backgroundColor: expensesColor,\r\n            hoverBackgroundColor: expensesColor\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <Doughnut data={data} width={750} height={200}\r\n            options={\r\n                {\r\n                    legend: {\r\n                        display: false,\r\n                    },\r\n                }}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default MainDiagram;\r\n","export type AddNewExpensesType = {\r\n    type: \"ADD_EXPENSE_ITEM\"\r\n    payload: any\r\n}\r\n\r\nexport const addNewExpenses = (expensesInfo: any): AddNewExpensesType => ({\r\n    type: \"ADD_EXPENSE_ITEM\",\r\n    payload: expensesInfo,\r\n})\r\n\r\n\r\nexport type ToggleAddExpensesWindowType = {\r\n    type: \"TOGGLE_ADD_EXPENSES_WINDOW\"\r\n    payload: boolean\r\n}\r\n\r\nexport const toggleAddExpensesWindow = (e: boolean): ToggleAddExpensesWindowType => ({\r\n    type: \"TOGGLE_ADD_EXPENSES_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\n\r\nexport type InputExpenseSumType = {\r\n    type: \"INPUT_EXPENSE_SUM\",\r\n    payload: {\r\n        id: number\r\n        sum: number\r\n    },\r\n}\r\n\r\nexport const inputExpenseSum = (id: number, sum: number): InputExpenseSumType => ({\r\n    type: \"INPUT_EXPENSE_SUM\",\r\n    payload: {\r\n        id: id,\r\n        sum: sum\r\n    },\r\n})\r\n\r\n\r\nexport type AddIncomeType = {\r\n    type: \"ADD_INCOME\"\r\n    payload: any\r\n}\r\n\r\nexport const addIncome = (incomeInfo: any): AddIncomeType => ({\r\n    type: \"ADD_INCOME\",\r\n    payload: incomeInfo,\r\n})\r\n\r\nexport type ToggleIncomesWindowType = {\r\n    type: \"TOGGLE_ADD_INCOMES_WINDOW\"\r\n    payload: boolean\r\n}\r\n\r\nexport const toggleIncomesWindow = (e: boolean): ToggleIncomesWindowType => ({\r\n    type: \"TOGGLE_ADD_INCOMES_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\n\r\nexport type ToggleInputExpenseAmountWindowType = {\r\n    type: \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\"\r\n    payload: boolean\r\n}\r\n\r\nexport const toggleInputExpenseAmountWindow = (e: boolean): ToggleInputExpenseAmountWindowType => ({\r\n    type: \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addNewExpenses> |\r\n    ReturnType<typeof toggleAddExpensesWindow> |\r\n    ReturnType<typeof inputExpenseSum> |\r\n    ReturnType<typeof toggleInputExpenseAmountWindow> |\r\n    ReturnType<typeof addIncome> |\r\n    ReturnType<typeof toggleIncomesWindow>\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { Fade } from '@material-ui/core'\r\nimport { TextField } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport s from './AddExpensesWindow.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redusers/rootReducer'\r\nimport { addNewExpenses, toggleAddExpensesWindow } from '../../../actions/actions'\r\n\r\nconst AddExpensesWindow: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    const addExpensesIsOpen = useSelector((state: RootState) => state.addExpensesIsOpen.addExpensesIsOpen)\r\n\r\n    const [inputExpensesName, setInputExpensesName] = useState('');\r\n    const handleChangeForName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputExpensesName(e.target.value);\r\n    };\r\n\r\n    const addExpenses = () => {\r\n        if (inputExpensesName.length > 3) {\r\n            dispatch(addNewExpenses({ expensesName: inputExpensesName, moneySpend: 0, id: itemsExpenses.length, icon: \"https://i.ibb.co/587QCcb/1.png\", bgColor: '#dddddd' }))\r\n            dispatch(toggleAddExpensesWindow(false))\r\n        }\r\n        else {\r\n            alert(\"Слишком короткое название! \")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s[\"AddExpensesWindow\"]}\r\n            onKeyPress={(e) => {\r\n                if (e.key === 'Enter') { addExpenses() }\r\n            }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleAddExpensesWindow(false))\r\n                }\r\n            }}>\r\n            <Modal className={s[\"AddExpensesWindow-Body\"]} open={addExpensesIsOpen}>\r\n                <Fade in={addExpensesIsOpen} timeout={400}>\r\n                    <div className={s[\"AddExpensesWindow-Box\"]}>\r\n                        <div className={s[\"AddExpensesWindow-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleAddExpensesWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"AddExpensesWindow-Title\"]}>Введите название категории</h1>\r\n                        <TextField id=\"outlined-basic\" label=\"Введите название\" variant=\"outlined\"\r\n                            fullWidth required placeholder=\"Например: Хобби\" margin=\"normal\"\r\n                            value={inputExpensesName}\r\n                            onChange={handleChangeForName} autoFocus={true}\r\n                        />\r\n\r\n                        <div style={{ marginTop: \"25px\" }}></div>\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addExpenses}>\r\n                            Добавить категорию\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddExpensesWindow;\r\n","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { Fade } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\nimport { Input } from '@material-ui/core';\r\n\r\nimport s from './InputOfExpenseAmount.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redusers/rootReducer'\r\nimport { inputExpenseSum, toggleInputExpenseAmountWindow } from '../../../actions/actions';\r\n\r\nconst InputOfExpenseAmount: React.FC<{ curentItemId: number }> = ({ curentItemId }) => {\r\n    const dispatch = useDispatch()\r\n    const inputExpenseAmountIsOpen = useSelector((state: RootState) => state.inputExpenseAmountWindow.inputExpenseAmountWindow)\r\n\r\n    const [inputExpensesSum, setInputExpensesSum] = useState('');\r\n    const handleChangeForSum = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputExpensesSum(e.target.value)\r\n    }\r\n\r\n\r\n    const addExpenses = () => {\r\n        if (parseInt(inputExpensesSum) <= 0 || isNaN(parseInt(inputExpensesSum))) {\r\n            alert(\"Введите сумму больше нуля\")\r\n        }\r\n        else {\r\n            dispatch(inputExpenseSum(curentItemId, parseInt(inputExpensesSum)))\r\n            dispatch(toggleInputExpenseAmountWindow(false))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s[\"InputOfExpenseAmount\"]}\r\n            onKeyPress={(e) => { if (e.key === 'Enter') { addExpenses() } }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleInputExpenseAmountWindow(false))\r\n                }\r\n            }} >\r\n\r\n            <Modal className={s[\"InputOfExpenseAmount-Body\"]} open={inputExpenseAmountIsOpen}>\r\n                <Fade in={true} timeout={400}>\r\n                    <div className={s[\"InputOfExpenseAmount-Box\"]}>\r\n                        <div className={s[\"InputOfExpenseAmount-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleInputExpenseAmountWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"InputOfExpenseAmount-Title\"]}>Введите сумму которую вы потратили</h1>\r\n\r\n                        <Input className={s[\"InputOfExpenseAmount-Input\"]} placeholder=\"Введите сумму\" autoFocus={true}\r\n                            type=\"number\" required\r\n                            value={inputExpensesSum} onChange={handleChangeForSum} />\r\n\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addExpenses}>\r\n                            Отправить сумму\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default InputOfExpenseAmount;\r\n","import React, { useState } from 'react'\r\nimport { Fade, TextField, Button, Modal } from '@material-ui/core'\r\n\r\nimport s from '../ItemsExpenses/AddExpensesWindow/AddExpensesWindow.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redusers/rootReducer'\r\nimport { addIncome, toggleIncomesWindow } from '../../actions/actions'\r\n\r\nconst AddIncomesWindow: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const incomesList = useSelector((state: RootState) => state.incomesList.incomes)\r\n    const incomeWindowIsOpen = useSelector((state: RootState) => state.incomesWindow.isOpen)\r\n\r\n    const [sumIncome, setSumIncome] = useState('');\r\n    const handleChangeForSum = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSumIncome(e.target.value);\r\n    };\r\n\r\n    const [commentIncome, setCommentIncome] = useState('');\r\n    const handleChangeForComment = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCommentIncome(e.target.value);\r\n    };\r\n\r\n    const addIncomeHandler = () => {\r\n        if (parseInt(sumIncome) <= 0 || isNaN(parseInt(sumIncome))) {\r\n            alert(\"Введите сумму больше нуля\")\r\n        }\r\n        else {\r\n            dispatch(addIncome({ moneyIncome: parseInt(sumIncome), id: incomesList.length, comment: commentIncome }))\r\n            dispatch(toggleIncomesWindow(false))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s[\"AddExpensesWindow\"]}\r\n            onKeyPress={(e) => {\r\n                if (e.key === 'Enter') { addIncomeHandler() }\r\n            }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleIncomesWindow(false))\r\n                }\r\n            }}>\r\n            <Modal className={s[\"AddExpensesWindow-Body\"]} open={incomeWindowIsOpen}>\r\n                <Fade in={incomeWindowIsOpen} timeout={400} style={{ height: 350 + \"px\" }} >\r\n                    <div className={s[\"AddExpensesWindow-Box\"]}>\r\n                        <div className={s[\"AddExpensesWindow-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleIncomesWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"AddExpensesWindow-Title\"]}>Доход</h1>\r\n\r\n                        <TextField id=\"outlined-basic\" label=\"Введите сумму\" variant=\"outlined\"\r\n                            fullWidth required placeholder=\"Сумма\" margin=\"normal\"\r\n                            value={sumIncome}\r\n                            onChange={handleChangeForSum} autoFocus={true}\r\n                        />\r\n                        <TextField id=\"outlined-basic\" label=\"Введите комментарий\" variant=\"outlined\"\r\n                            fullWidth placeholder=\"Комментарий\" margin=\"normal\"\r\n                            value={commentIncome}\r\n                            onChange={handleChangeForComment}\r\n                        />\r\n\r\n                        <div style={{ marginTop: \"25px\" }}></div>\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addIncomeHandler}>\r\n                            Добавить доход\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddIncomesWindow;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from \"../../redusers/rootReducer\"\r\nimport s from \"./itemsExpenses.module.scss\"\r\n\r\nimport AddExpenses from './AddExpenses/AddExpenses'\r\nimport MainDiagram from './MainDiagram/MainDiagram'\r\nimport AddExpensesWindow from './AddExpensesWindow/AddExpensesWindow'\r\nimport { toggleAddExpensesWindow, toggleInputExpenseAmountWindow } from '../../actions/actions'\r\nimport InputOfExpenseAmount from './InputOfExpenseAmount/InputOfExpenseAmount'\r\nimport { ItemsExpensesType } from '../../redusers/itemsExpensesReducer'\r\nimport AddIncomesWindow from '../AddIncomesWindow/AddIncomesWindow'\r\n\r\nconst ItemsExpenses: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [curentItemForAddSum, setCurentItemForAddSum] = useState(0);\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    const addExpensesIsOpen = useSelector((state: RootState) => state.addExpensesIsOpen.addExpensesIsOpen)\r\n    const inputExpenseAmountIsOpen = useSelector((state: RootState) => state.inputExpenseAmountWindow.inputExpenseAmountWindow)\r\n    const incomeWindowIsOpen = useSelector((state: RootState) => state.incomesWindow.isOpen)\r\n\r\n    const handlerForExpensesItem = (id: number) => {\r\n        setCurentItemForAddSum(id)\r\n        dispatch(toggleInputExpenseAmountWindow(true))\r\n    }\r\n\r\n    return (\r\n        <div className={s[\"ItemsExpenses\"]} >\r\n\r\n            {itemsExpenses.length > 0 &&\r\n                itemsExpenses.map(({ expensesName, moneySpend, id, icon, bgColor }: ItemsExpensesType) => {\r\n                    return (\r\n                        <div className={s[\"ItemsExpenses-Item\"]} key={id}>\r\n                            <div className={s[\"ItemsExpenses-Name\"]} >{expensesName}</div>\r\n                            <div className={s[\"ItemsExpenses-WrapForIcon\"]} style={{ backgroundColor: bgColor }}\r\n                                onClick={() => handlerForExpensesItem(id)} >\r\n                                <img className={s[\"ItemsExpenses-Icon\"]} src={icon} alt={\"icon\"} />\r\n                            </div>\r\n                            <div className={s[\"ItemsExpenses-Money\"]} >\r\n                                {moneySpend}\r\n                                <span> ₴</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            {inputExpenseAmountIsOpen && <InputOfExpenseAmount curentItemId={curentItemForAddSum} />}\r\n\r\n            <div className={s[\"ItemsExpenses-Diagram\"]}>\r\n                <MainDiagram />\r\n            </div>\r\n\r\n            <div onClick={() => dispatch(toggleAddExpensesWindow(true))} >\r\n                {itemsExpenses.length < 9 && <AddExpenses />}\r\n            </div>\r\n\r\n            {addExpensesIsOpen && <AddExpensesWindow />}\r\n\r\n            {incomeWindowIsOpen && <AddIncomesWindow />}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default ItemsExpenses;\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport s from \"./Expenses.module.scss\"\nimport ItemsExpenses from '../ItemsExpenses/ItemsExpenses';\n\nconst Expenses = () => {\n  return (\n    <>\n      <CssBaseline />\n      <div className={s.Expenses} >\n        <Container className={s[\"Expenses-Body\"]} maxWidth=\"lg\" >\n          <Paper className={s[\"Expenses-Box\"]} elevation={2} variant=\"outlined\" >\n            <ItemsExpenses />\n          </Paper>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Expenses;\n","import { AppBar, Toolbar, Button, Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleIncomesWindow } from '../../actions/actions';\r\nimport { RootState } from \"../../redusers/rootReducer\"\r\nimport s from \"./Header.module.scss\"\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    let sumExpenses = 0;\r\n    itemsExpenses.map(({ moneySpend }) => {\r\n        sumExpenses += moneySpend\r\n    })\r\n\r\n    const incomesList = useSelector((state: RootState) => state.incomesList.incomes)\r\n    let sumIncomes = 0;\r\n    incomesList.map(({ moneyIncome }) => {\r\n        sumIncomes += moneyIncome\r\n    })\r\n\r\n    const handlerForIncomes = () => {\r\n        dispatch(toggleIncomesWindow(true))\r\n    }\r\n\r\n    return (\r\n        <AppBar color=\"default\" className={s.Header}>\r\n            <Toolbar>\r\n                <Grid container justify=\"space-between\"\r\n                    alignItems=\"center\">\r\n\r\n                    <Grid item className={s[\"Header-Column\"]}>\r\n                        <span className={s[\"Header-Logo\"]}>24Money <span>(demo)</span></span>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            className={s[\"Header-Btn\"]}\r\n                            onClick={() => handlerForIncomes()}\r\n                        >Добавить доходы</Button>\r\n\r\n                        <Button variant=\"outlined\" className={s[\"Header-Btn\"]}>История</Button>\r\n                    </Grid>\r\n\r\n                    <Grid item className={s[\"Header-Column\"]}>\r\n                        <span className={s[\"Header-Label\"]}>Расходы: <b>-{sumExpenses}₴</b></span>\r\n                        <span className={s[\"Header-Label\"]}> Доходы: <b>+{sumIncomes}₴</b> </span>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar >\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { Provider } from 'react-redux';\r\nimport { store } from \"./store\"\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport Header from './components/Header/Header';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Header />\r\n      <Expenses />\r\n    </Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputOfExpenseAmount-Box\":\"InputOfExpenseAmount_InputOfExpenseAmount-Box__31nwi\",\"InputOfExpenseAmount-CloseIcon\":\"InputOfExpenseAmount_InputOfExpenseAmount-CloseIcon__3c7hJ\",\"InputOfExpenseAmount-Title\":\"InputOfExpenseAmount_InputOfExpenseAmount-Title__1DSkr\",\"InputOfExpenseAmount-Input\":\"InputOfExpenseAmount_InputOfExpenseAmount-Input__3ZL3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Expenses\":\"Expenses_Expenses__1WDzg\",\"Expenses-Body\":\"Expenses_Expenses-Body__2JdEa\",\"Expenses-Box\":\"Expenses_Expenses-Box__27I4d\"};"],"sourceRoot":""}