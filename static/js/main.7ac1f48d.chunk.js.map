{"version":3,"sources":["components/ItemsExpenses/itemsExpenses.module.scss","components/ItemsExpenses/AddExpenses/AddExpenses.tsx","components/ItemsExpenses/MainDiagram/MainDiagram.tsx","actions/actions.ts","components/ItemsExpenses/AddExpensesWindow/AddExpensesWindow.tsx","components/ItemsExpenses/InputOfExpenseAmount/InputOfExpenseAmount.tsx","components/ItemsExpenses/ItemsExpenses.tsx","redusers/addExpensesIsOpen.ts","redusers/inputExpenseAmountWindow.ts","redusers/itemsExpensesReducer.ts","redusers/rootReducer.ts","store.js","components/App/App.tsx","index.ts","components/ItemsExpenses/InputOfExpenseAmount/InputOfExpenseAmount.module.scss","components/ItemsExpenses/AddExpensesWindow/AddExpensesWindow.module.scss","components/App/App.module.scss"],"names":["module","exports","AddExpenses","className","s","src","alt","MainDiagram","itemsExpenses","useSelector","state","expensesNames","expensesMoney","expensesColor","map","e","push","expensesName","moneySpend","bgColor","data","labels","datasets","backgroundColor","hoverBackgroundColor","width","height","options","legend","display","toggleAddExpensesWindow","type","payload","toggleInputExpenseAmountWindow","AddExpensesWindow","dispatch","useDispatch","addExpensesIsOpen","useState","inputExpensesName","setInputExpensesName","addExpenses","length","id","icon","alert","onKeyPress","key","onClick","target","Modal","open","Fade","in","timeout","TextField","label","variant","fullWidth","required","placeholder","margin","value","onChange","autoFocus","style","marginTop","Button","size","InputOfExpenseAmount","curentItemId","inputExpenseAmountIsOpen","inputExpenseAmountWindow","inputExpensesSum","setInputExpensesSum","sum","parseInt","Input","ItemsExpenses","curentItemForAddSum","setCurentItemForAddSum","handlerForExpensesItem","initialState","rootReducer","combineReducers","action","copyState","item","store","createStore","composeWithDevTools","applyMiddleware","App","CssBaseline","Container","maxWidth","Paper","elevation","ReactDOM","render","React","createElement","document","getElementById"],"mappings":"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","file":"static/js/main.7ac1f48d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemsExpenses\":\"itemsExpenses_ItemsExpenses__1gjH0\",\"ItemsExpenses-Diagram\":\"itemsExpenses_ItemsExpenses-Diagram__2urdp\",\"ItemsExpenses-Item\":\"itemsExpenses_ItemsExpenses-Item__3X2w8\",\"ItemsExpenses-WrapForIcon\":\"itemsExpenses_ItemsExpenses-WrapForIcon__3pFdA\",\"ItemsExpenses-Icon\":\"itemsExpenses_ItemsExpenses-Icon__3mS-l\",\"ItemsExpenses-Money\":\"itemsExpenses_ItemsExpenses-Money__17uD2\"};","import React from 'react'\r\nimport s from \"../itemsExpenses.module.scss\"\r\n\r\n\r\nconst AddExpenses: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s[\"ItemsExpenses-Item\"]}>\r\n            <div className={s[\"ItemsExpenses-Name\"]} >Добавить</div>\r\n            <div className={s[\"ItemsExpenses-WrapForIcon\"]} >\r\n                <img className={s[\"ItemsExpenses-Icon\"]} src={\"https://i.ibb.co/gwF9wSm/plus.png\"} alt={\"icon\"} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddExpenses;\r\n","import { useSelector } from 'react-redux'\r\nimport { RootState } from \"../../../redusers/rootReducer\"\r\n\r\n\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport { ItemsExpensesType } from '../../../redusers/itemsExpensesReducer'\r\n\r\nconst MainDiagram: React.FC = () => {\r\n\r\n    let itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n\r\n    const expensesNames: string[] = []\r\n    const expensesMoney: number[] = []\r\n    const expensesColor: string[] = []\r\n\r\n    itemsExpenses.map(\r\n        (e: ItemsExpensesType) => {\r\n            expensesNames.push(e.expensesName)\r\n            expensesMoney.push(e.moneySpend)\r\n            expensesColor.push(e.bgColor)\r\n        })\r\n\r\n    const data = {\r\n        labels: expensesNames,\r\n        datasets: [{\r\n            data: expensesMoney,\r\n            backgroundColor: expensesColor,\r\n            hoverBackgroundColor: expensesColor\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <Doughnut data={data} width={750} height={200}\r\n            options={\r\n                {\r\n                    legend: {\r\n                        display: false,\r\n                    },\r\n                }}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default MainDiagram;\r\n","export type AddNewExpensesType = {\r\n    type: \"ADD_EXPENSE_ITEM\",\r\n    payload: any\r\n}\r\n\r\nexport const addNewExpenses = (expensesInfo: any): AddNewExpensesType => ({\r\n    type: \"ADD_EXPENSE_ITEM\",\r\n    payload: expensesInfo,\r\n})\r\n\r\n\r\nexport type ToggleAddExpensesWindowType = {\r\n    type: \"TOGGLE_ADD_EXPENSES_WINDOW\",\r\n    payload: boolean,\r\n}\r\n\r\nexport const toggleAddExpensesWindow = (e: boolean): ToggleAddExpensesWindowType => ({\r\n    type: \"TOGGLE_ADD_EXPENSES_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\n\r\nexport type InputExpenseSumType = {\r\n    type: \"INPUT_EXPENSE_SUM\",\r\n    payload: {\r\n        id: number,\r\n        sum: number\r\n    },\r\n}\r\n\r\nexport const inputExpenseSum = (id: number, sum: number): InputExpenseSumType => ({\r\n    type: \"INPUT_EXPENSE_SUM\",\r\n    payload: {\r\n        id: id,\r\n        sum: sum\r\n    },\r\n})\r\n\r\n\r\nexport type ToggleInputExpenseAmountWindowType = {\r\n    type: \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\",\r\n    payload: boolean,\r\n}\r\n\r\nexport const toggleInputExpenseAmountWindow = (e: boolean): ToggleInputExpenseAmountWindowType => ({\r\n    type: \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addNewExpenses> |\r\n    ReturnType<typeof toggleAddExpensesWindow> |\r\n    ReturnType<typeof inputExpenseSum> |\r\n    ReturnType<typeof toggleInputExpenseAmountWindow>\r\n","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { Fade } from '@material-ui/core'\r\nimport { TextField } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport s from './AddExpensesWindow.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redusers/rootReducer'\r\nimport { addNewExpenses, toggleAddExpensesWindow } from '../../../actions/actions'\r\n\r\nconst AddExpensesWindow: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    const addExpensesIsOpen = useSelector((state: RootState) => state.addExpensesIsOpen.addExpensesIsOpen)\r\n\r\n    const [inputExpensesName, setInputExpensesName] = useState('');\r\n    const handleChangeForName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputExpensesName(e.target.value);\r\n    };\r\n\r\n    const addExpenses = () => {\r\n        if (inputExpensesName.length > 3) {\r\n            dispatch(addNewExpenses({ expensesName: inputExpensesName, moneySpend: 0, id: itemsExpenses.length, icon: \"https://i.ibb.co/587QCcb/1.png\", bgColor: '#dddddd' }))\r\n            dispatch(toggleAddExpensesWindow(false))\r\n        }\r\n        else {\r\n            alert(\"Слишком короткое название! \")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s[\"AddExpensesWindow\"]}\r\n            onKeyPress={(e) => {\r\n                if (e.key === 'Enter') { addExpenses() }\r\n            }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleAddExpensesWindow(false))\r\n                }\r\n            }}>\r\n            <Modal className={s[\"AddExpensesWindow-Body\"]} open={addExpensesIsOpen}>\r\n                <Fade in={addExpensesIsOpen} timeout={400}>\r\n                    <div className={s[\"AddExpensesWindow-Box\"]}>\r\n                        <div className={s[\"AddExpensesWindow-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleAddExpensesWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"AddExpensesWindow-Title\"]}>Введите название категории</h1>\r\n                        <TextField id=\"outlined-basic\" label=\"Введите название\" variant=\"outlined\"\r\n                            fullWidth required placeholder=\"Например: Хобби\" margin=\"normal\"\r\n                            value={inputExpensesName}\r\n                            onChange={handleChangeForName} autoFocus={true}\r\n                        />\r\n\r\n                        <div style={{ marginTop: \"25px\" }}></div>\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addExpenses}>\r\n                            Добавить категорию\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddExpensesWindow;\r\n","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { Fade } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\nimport { Input } from '@material-ui/core';\r\n\r\nimport s from './InputOfExpenseAmount.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redusers/rootReducer'\r\nimport { inputExpenseSum, toggleInputExpenseAmountWindow } from '../../../actions/actions';\r\n\r\nconst InputOfExpenseAmount: React.FC<{ curentItemId: number }> = ({ curentItemId }) => {\r\n    const dispatch = useDispatch()\r\n    const inputExpenseAmountIsOpen = useSelector((state: RootState) => state.inputExpenseAmountWindow.inputExpenseAmountWindow)\r\n\r\n    const [inputExpensesSum, setInputExpensesSum] = useState('');\r\n    const handleChangeForSum = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputExpensesSum(e.target.value)\r\n    }\r\n\r\n\r\n    const addExpenses = () => {\r\n        if (parseInt(inputExpensesSum) <= 0) {\r\n            alert(\"Введите сумму больше нуля\")\r\n        }\r\n        else {\r\n            dispatch(inputExpenseSum(curentItemId, parseInt(inputExpensesSum)))\r\n            dispatch(toggleInputExpenseAmountWindow(false))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s[\"InputOfExpenseAmount\"]}\r\n            onKeyPress={(e) => { if (e.key === 'Enter') { addExpenses() } }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleInputExpenseAmountWindow(false))\r\n                }\r\n            }} >\r\n\r\n            <Modal className={s[\"InputOfExpenseAmount-Body\"]} open={inputExpenseAmountIsOpen}>\r\n                <Fade in={true} timeout={400}>\r\n                    <div className={s[\"InputOfExpenseAmount-Box\"]}>\r\n                        <div className={s[\"InputOfExpenseAmount-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleInputExpenseAmountWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"InputOfExpenseAmount-Title\"]}>Введите сумму которую вы потратили</h1>\r\n\r\n                        <Input className={s[\"InputOfExpenseAmount-Input\"]} placeholder=\"Введите сумму\" autoFocus={true}\r\n                            type=\"number\" required\r\n                            value={inputExpensesSum} onChange={handleChangeForSum} />\r\n\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addExpenses}>\r\n                            Отправить сумму\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default InputOfExpenseAmount;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from \"../../redusers/rootReducer\"\r\nimport s from \"./itemsExpenses.module.scss\"\r\n\r\nimport AddExpenses from './AddExpenses/AddExpenses'\r\nimport MainDiagram from './MainDiagram/MainDiagram'\r\nimport AddExpensesWindow from './AddExpensesWindow/AddExpensesWindow'\r\nimport { toggleAddExpensesWindow, toggleInputExpenseAmountWindow } from '../../actions/actions'\r\nimport InputOfExpenseAmount from './InputOfExpenseAmount/InputOfExpenseAmount'\r\nimport { ItemsExpensesType } from '../../redusers/itemsExpensesReducer'\r\n\r\nconst ItemsExpenses: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [curentItemForAddSum, setCurentItemForAddSum] = useState(0);\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    const addExpensesIsOpen = useSelector((state: RootState) => state.addExpensesIsOpen.addExpensesIsOpen)\r\n    const inputExpenseAmountIsOpen = useSelector((state: RootState) => state.inputExpenseAmountWindow.inputExpenseAmountWindow)\r\n\r\n    const handlerForExpensesItem = (id: number) => {\r\n        setCurentItemForAddSum(id)\r\n        dispatch(toggleInputExpenseAmountWindow(true))\r\n    }\r\n\r\n    return (\r\n        <div className={s[\"ItemsExpenses\"]} >\r\n\r\n            {itemsExpenses.length > 0 &&\r\n                itemsExpenses.map(({ expensesName, moneySpend, id, icon, bgColor }: ItemsExpensesType) => {\r\n                    return (\r\n                        <div className={s[\"ItemsExpenses-Item\"]} key={id}>\r\n                            <div className={s[\"ItemsExpenses-Name\"]} >{expensesName}</div>\r\n                            <div className={s[\"ItemsExpenses-WrapForIcon\"]} style={{ backgroundColor: bgColor }}\r\n                                onClick={() => handlerForExpensesItem(id)} >\r\n                                <img className={s[\"ItemsExpenses-Icon\"]} src={icon} alt={\"icon\"} />\r\n                            </div>\r\n                            <div className={s[\"ItemsExpenses-Money\"]} >\r\n                                {moneySpend}\r\n                                <span> ₴</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            {inputExpenseAmountIsOpen && <InputOfExpenseAmount curentItemId={curentItemForAddSum} />}\r\n\r\n            <div className={s[\"ItemsExpenses-Diagram\"]}>\r\n                <MainDiagram />\r\n            </div>\r\n\r\n            <div onClick={() => dispatch(toggleAddExpensesWindow(true))} >\r\n                {itemsExpenses.length < 9 && <AddExpenses />}\r\n            </div>\r\n\r\n            {addExpensesIsOpen && <AddExpensesWindow />}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default ItemsExpenses;\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    addExpensesIsOpen: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    addExpensesIsOpen: false,\r\n}\r\n\r\nexport const addExpensesIsOpen = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_ADD_EXPENSES_WINDOW\":\r\n            return { ...state, addExpensesIsOpen: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    inputExpenseAmountWindow: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    inputExpenseAmountWindow: false,\r\n}\r\n\r\nexport const inputExpenseAmountWindow = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\":\r\n            return { ...state, inputExpenseAmountWindow: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    itemsExpenses: Array<ItemsExpensesType>\r\n}\r\n\r\nexport type ItemsExpensesType = {\r\n    expensesName: string\r\n    moneySpend: number\r\n    id: number\r\n    icon: string\r\n    bgColor: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    itemsExpenses: [\r\n        { expensesName: \"Продукты\", moneySpend: 10, id: 0, icon: \"https://i.ibb.co/587QCcb/1.png\", bgColor: '#FF6384' },\r\n        { expensesName: \"Кафе\", moneySpend: 20, id: 1, icon: \"https://i.ibb.co/K5vBxYX/2.png\", bgColor: '#36A2EB' },\r\n        { expensesName: \"Досуг\", moneySpend: 100, id: 2, icon: \"https://i.ibb.co/DfSGjwY/3.png\", bgColor: '#FFCE56' },\r\n        { expensesName: \"Транспорт\", moneySpend: 5, id: 3, icon: \"https://i.ibb.co/KwDCn5q/4.png\", bgColor: '#FF1156' },\r\n        { expensesName: \"Здоровье\", moneySpend: 45, id: 4, icon: \"https://i.ibb.co/2MwCWLZ/5.png\", bgColor: '#FF9E56' },\r\n        { expensesName: \"Подарки\", moneySpend: 50, id: 5, icon: \"https://i.ibb.co/7gHHM1r/6.png\", bgColor: '#e01a4b' },\r\n        { expensesName: \"Семья\", moneySpend: 20, id: 6, icon: \"https://i.ibb.co/jz4N7kG/7.png\", bgColor: '#197b94' },\r\n        { expensesName: \"Покупки\", moneySpend: 150, id: 7, icon: \"https://i.ibb.co/jrc4bwQ/8.png\", bgColor: '#c2351f' },\r\n    ] as Array<ItemsExpensesType>\r\n}\r\n\r\nexport const itemsExpensesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    let copyState = [...state.itemsExpenses]\r\n    switch (action.type) {\r\n        case \"ADD_EXPENSE_ITEM\":\r\n            copyState.push(action.payload)\r\n            return { itemsExpenses: [...copyState] }\r\n\r\n        case \"INPUT_EXPENSE_SUM\":\r\n            copyState.map((item) => { if (item.id === action.payload.id) { item.moneySpend += action.payload.sum } })\r\n            return { itemsExpenses: [...copyState] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nimport { combineReducers } from \"redux\";\r\nimport { addExpensesIsOpen } from \"./addExpensesIsOpen\";\r\nimport { inputExpenseAmountWindow } from \"./inputExpenseAmountWindow\";\r\nimport { itemsExpensesReducer } from \"./itemsExpensesReducer\"\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    itemsExpenses: itemsExpensesReducer,\r\n    addExpensesIsOpen: addExpensesIsOpen,\r\n    inputExpenseAmountWindow: inputExpenseAmountWindow\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from \"redux\"\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { rootReducer } from \"./redusers/rootReducer\"\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(),\r\n    )\r\n)","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport s from \"./App.module.scss\"\nimport ItemsExpenses from '../ItemsExpenses/ItemsExpenses';\nimport { Provider } from 'react-redux';\nimport { store } from \"../../store\"\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <CssBaseline />\n      <div className={s.App} >\n        <Container className={s[\"App-Body\"]} maxWidth=\"lg\" >\n          <Paper className={s[\"App-Box\"]} elevation={2} variant=\"outlined\" >\n            <ItemsExpenses />\n          </Paper>\n        </Container>\n      </div>\n    </Provider >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputOfExpenseAmount-Box\":\"InputOfExpenseAmount_InputOfExpenseAmount-Box__31nwi\",\"InputOfExpenseAmount-CloseIcon\":\"InputOfExpenseAmount_InputOfExpenseAmount-CloseIcon__3c7hJ\",\"InputOfExpenseAmount-Title\":\"InputOfExpenseAmount_InputOfExpenseAmount-Title__1DSkr\",\"InputOfExpenseAmount-Input\":\"InputOfExpenseAmount_InputOfExpenseAmount-Input__3ZL3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddExpensesWindow-Box\":\"AddExpensesWindow_AddExpensesWindow-Box__1pve6\",\"AddExpensesWindow-CloseIcon\":\"AddExpensesWindow_AddExpensesWindow-CloseIcon__2odHN\",\"AddExpensesWindow-Title\":\"AddExpensesWindow_AddExpensesWindow-Title__1nCzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Q4DR\",\"App-Body\":\"App_App-Body__2-zlp\",\"App-Box\":\"App_App-Box__2DE5-\"};"],"sourceRoot":""}