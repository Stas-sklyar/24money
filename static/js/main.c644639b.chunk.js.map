{"version":3,"sources":["components/ItemsExpenses/AddExpensesWindow/AddExpensesWindow.module.scss","components/ItemsExpenses/itemsExpenses.module.scss","components/Header/Header.module.scss","redusers/addExpensesIsOpen.ts","redusers/addIncomesWindow.ts","redusers/historyExpensesReducer.ts","redusers/historyIncomesReducer.ts","redusers/historyWindowReducer.ts","redusers/incomesReducer.ts","redusers/inputExpenseAmountWindow.ts","redusers/itemsExpensesReducer.ts","redusers/rootReducer.ts","store.js","components/ItemsExpenses/AddExpenses/AddExpenses.tsx","components/ItemsExpenses/MainDiagram/MainDiagram.tsx","actions/actions.ts","components/ItemsExpenses/AddExpensesWindow/AddExpensesWindow.tsx","components/ItemsExpenses/InputOfExpenseAmount/InputOfExpenseAmount.tsx","components/AddIncomesWindow/AddIncomesWindow.tsx","components/historyWindow/expensesHistory/expensesHistory.tsx","components/historyWindow/incomesHistory/incomesHistory.tsx","components/historyWindow/historyWindow.tsx","components/ItemsExpenses/ItemsExpenses.tsx","components/Expenses/Expenses.tsx","components/Header/Header.tsx","App.tsx","index.ts","components/ItemsExpenses/InputOfExpenseAmount/InputOfExpenseAmount.module.scss","components/Expenses/Expenses.module.scss"],"names":["module","exports","initialState","addExpensesIsOpen","isOpen","historyExpensesList","historyIncomesList","incomes","moneyIncome","id","comment","inputExpenseAmountWindow","itemsExpenses","expensesName","moneySpend","icon","bgColor","rootReducer","combineReducers","state","action","copyState","type","push","payload","map","item","sum","incomesWindow","incomesList","historyWindow","historyExpenses","historyIncomes","store","createStore","composeWithDevTools","applyMiddleware","AddExpenses","className","s","src","alt","MainDiagram","useSelector","expensesNames","expensesMoney","expensesColor","e","data","labels","datasets","backgroundColor","hoverBackgroundColor","width","height","options","legend","display","toggleAddExpensesWindow","toggleIncomesWindow","toggleInputExpenseAmountWindow","toggleHistoryWindow","AddExpensesWindow","dispatch","useDispatch","useState","inputExpensesName","setInputExpensesName","addExpenses","length","alert","onKeyPress","key","onClick","target","Modal","open","Fade","in","timeout","TextField","label","variant","fullWidth","required","placeholder","margin","value","onChange","autoFocus","style","marginTop","Button","size","InputOfExpenseAmount","curentItemId","curentCategory","inputExpenseAmountIsOpen","expensesHistoryArr","inputExpensesSum","setInputExpensesSum","parseInt","isNaN","date","Date","month","getMonth","dateNewFormat","getDate","getFullYear","category","addExpenseHistoryItem","Input","AddIncomesWindow","incomeWindowIsOpen","sumIncome","setSumIncome","commentIncome","setCommentIncome","addIncomeHandler","addIncomesHistoryItem","useStyles","makeStyles","table","minWidth","ExpensesHistory","classes","rows","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","padding","IncomesHistory","incomesHistoryArr","HistoryWindow","historyWindowIsOpen","ItemsExpenses","curentItemForAddSum","setCurentItemForAddSum","curentCategoryForHistory","setCurentCategory","handlerForExpensesItem","Expenses","CssBaseline","Container","maxWidth","elevation","Header","sumExpenses","sumIncomes","AppBar","color","Toolbar","Grid","container","justify","alignItems","App","ReactDOM","render","React","createElement","document","getElementById"],"mappings":"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","file":"static/js/main.c644639b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddExpensesWindow-Box\":\"AddExpensesWindow_AddExpensesWindow-Box__1pve6\",\"AddExpensesWindow-CloseIcon\":\"AddExpensesWindow_AddExpensesWindow-CloseIcon__2odHN\",\"AddExpensesWindow-Title\":\"AddExpensesWindow_AddExpensesWindow-Title__1nCzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemsExpenses\":\"itemsExpenses_ItemsExpenses__1gjH0\",\"ItemsExpenses-Diagram\":\"itemsExpenses_ItemsExpenses-Diagram__2urdp\",\"ItemsExpenses-Item\":\"itemsExpenses_ItemsExpenses-Item__3X2w8\",\"ItemsExpenses-WrapForIcon\":\"itemsExpenses_ItemsExpenses-WrapForIcon__3pFdA\",\"ItemsExpenses-Icon\":\"itemsExpenses_ItemsExpenses-Icon__3mS-l\",\"ItemsExpenses-Money\":\"itemsExpenses_ItemsExpenses-Money__17uD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header-Column\":\"Header_Header-Column__3cyC0\",\"Header-Logo\":\"Header_Header-Logo__3Xbjx\",\"Header-Btn\":\"Header_Header-Btn__3gWAT\",\"Header-Label\":\"Header_Header-Label__MKTkm\"};","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    addExpensesIsOpen: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    addExpensesIsOpen: false,\r\n}\r\n\r\nexport const addExpensesIsOpen = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_ADD_EXPENSES_WINDOW\":\r\n            return { ...state, addExpensesIsOpen: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    isOpen: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isOpen: false,\r\n}\r\n\r\nexport const addIncomesWindow = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_ADD_INCOMES_WINDOW\":\r\n            return { ...state, isOpen: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    historyExpensesList: Array<ItemsExpensesType>\r\n}\r\n\r\nexport type ItemsExpensesType = {\r\n    category: string\r\n    sum: number\r\n    id: number\r\n    date: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    historyExpensesList: [\r\n    ] as Array<ItemsExpensesType>\r\n}\r\n\r\nexport const historyExpensesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    let copyState = [...state.historyExpensesList]\r\n    switch (action.type) {\r\n        case \"ADD_NEW_EXPENSES_HISTORY_ITEM\":\r\n            copyState.push(action.payload)\r\n            return { historyExpensesList: [...copyState] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    historyIncomesList: Array<ItemsIncomesType>\r\n}\r\n\r\nexport type ItemsIncomesType = {\r\n    sum: number\r\n    comment: string\r\n    id: number\r\n    date: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    historyIncomesList: [\r\n    ] as Array<ItemsIncomesType>\r\n}\r\n\r\nexport const historyIncomesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    let copyState = [...state.historyIncomesList]\r\n    switch (action.type) {\r\n        case \"ADD_NEW_INCOMES_HISTORY_ITEM\":\r\n            copyState.push(action.payload)\r\n            return { historyIncomesList: [...copyState] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    isOpen: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isOpen: 'none',\r\n}\r\n\r\nexport const historyWindow = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_HISTORY_WINDOW\":\r\n            return { ...state, isOpen: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateIncomeType = {\r\n    incomes: Array<IncomeType>\r\n}\r\n\r\nexport type IncomeType = {\r\n    moneyIncome: number\r\n    id: number\r\n    comment: string\r\n}\r\n\r\nconst initialState: InitialStateIncomeType = {\r\n    incomes: [\r\n        { moneyIncome: 4000, id: 0, comment: 'Заработная плата' },\r\n        { moneyIncome: 1300, id: 1, comment: 'Стипендия' }\r\n    ] as Array<IncomeType>\r\n}\r\n\r\nexport const incomesReducer = (state = initialState, action: ActionsTypes): InitialStateIncomeType => {\r\n    let copyState = [...state.incomes]\r\n    switch (action.type) {\r\n        case \"ADD_INCOME\":\r\n            copyState.push(action.payload)\r\n            return { incomes: [...copyState] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    inputExpenseAmountWindow: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    inputExpenseAmountWindow: false,\r\n}\r\n\r\nexport const inputExpenseAmountWindow = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\":\r\n            return { ...state, inputExpenseAmountWindow: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { ActionsTypes } from \"../actions/actions\";\r\n\r\nexport type InitialStateType = {\r\n    itemsExpenses: Array<ItemsExpensesType>\r\n}\r\n\r\nexport type ItemsExpensesType = {\r\n    expensesName: string\r\n    moneySpend: number\r\n    id: number\r\n    icon: string\r\n    bgColor: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    itemsExpenses: [\r\n        { expensesName: \"Продукты\", moneySpend: 10, id: 0, icon: \"https://i.ibb.co/587QCcb/1.png\", bgColor: '#FF6384' },\r\n        { expensesName: \"Кафе\", moneySpend: 20, id: 1, icon: \"https://i.ibb.co/K5vBxYX/2.png\", bgColor: '#36A2EB' },\r\n        { expensesName: \"Досуг\", moneySpend: 100, id: 2, icon: \"https://i.ibb.co/DfSGjwY/3.png\", bgColor: '#FFCE56' },\r\n        { expensesName: \"Транспорт\", moneySpend: 5, id: 3, icon: \"https://i.ibb.co/KwDCn5q/4.png\", bgColor: '#FF1156' },\r\n        { expensesName: \"Здоровье\", moneySpend: 45, id: 4, icon: \"https://i.ibb.co/2MwCWLZ/5.png\", bgColor: '#FF9E56' },\r\n        { expensesName: \"Подарки\", moneySpend: 50, id: 5, icon: \"https://i.ibb.co/7gHHM1r/6.png\", bgColor: '#e01a4b' },\r\n        { expensesName: \"Семья\", moneySpend: 20, id: 6, icon: \"https://i.ibb.co/jz4N7kG/7.png\", bgColor: '#197b94' },\r\n        { expensesName: \"Покупки\", moneySpend: 150, id: 7, icon: \"https://i.ibb.co/jrc4bwQ/8.png\", bgColor: '#c2351f' },\r\n    ] as Array<ItemsExpensesType>\r\n}\r\n\r\nexport const itemsExpensesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    let copyState = [...state.itemsExpenses]\r\n    switch (action.type) {\r\n        case \"ADD_EXPENSE_ITEM\":\r\n            copyState.push(action.payload)\r\n            return { itemsExpenses: [...copyState] }\r\n\r\n        case \"INPUT_EXPENSE_SUM\":\r\n            copyState.map((item) => { if (item.id === action.payload.id) { item.moneySpend += action.payload.sum } })\r\n            return { itemsExpenses: [...copyState] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nimport { combineReducers } from \"redux\";\r\nimport { addExpensesIsOpen } from \"./addExpensesIsOpen\";\r\nimport { addIncomesWindow } from \"./addIncomesWindow\";\r\nimport { historyExpensesReducer } from \"./historyExpensesReducer\";\r\nimport { historyIncomesReducer } from \"./historyIncomesReducer\";\r\nimport { historyWindow } from \"./historyWindowReducer\";\r\nimport { incomesReducer } from \"./incomesReducer\";\r\nimport { inputExpenseAmountWindow } from \"./inputExpenseAmountWindow\";\r\nimport { itemsExpensesReducer } from \"./itemsExpensesReducer\"\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    itemsExpenses: itemsExpensesReducer,\r\n    addExpensesIsOpen: addExpensesIsOpen,\r\n    inputExpenseAmountWindow: inputExpenseAmountWindow,\r\n    incomesWindow: addIncomesWindow,\r\n    incomesList: incomesReducer,\r\n    historyWindow: historyWindow,\r\n    historyExpenses: historyExpensesReducer,\r\n    historyIncomes: historyIncomesReducer,\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from \"redux\"\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { rootReducer } from \"./redusers/rootReducer\"\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(),\r\n    )\r\n)","import React from 'react'\r\nimport s from \"../itemsExpenses.module.scss\"\r\n\r\n\r\nconst AddExpenses: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s[\"ItemsExpenses-Item\"]}>\r\n            <div className={s[\"ItemsExpenses-Name\"]} >Добавить</div>\r\n            <div className={s[\"ItemsExpenses-WrapForIcon\"]} >\r\n                <img className={s[\"ItemsExpenses-Icon\"]} src={\"https://i.ibb.co/gwF9wSm/plus.png\"} alt={\"icon\"} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddExpenses;\r\n","import { useSelector } from 'react-redux'\r\nimport { RootState } from \"../../../redusers/rootReducer\"\r\n\r\n\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport { ItemsExpensesType } from '../../../redusers/itemsExpensesReducer'\r\n\r\nconst MainDiagram: React.FC = () => {\r\n\r\n    let itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n\r\n    const expensesNames: string[] = []\r\n    const expensesMoney: number[] = []\r\n    const expensesColor: string[] = []\r\n\r\n    itemsExpenses.map(\r\n        (e: ItemsExpensesType) => {\r\n            expensesNames.push(e.expensesName)\r\n            expensesMoney.push(e.moneySpend)\r\n            expensesColor.push(e.bgColor)\r\n        })\r\n\r\n    const data = {\r\n        labels: expensesNames,\r\n        datasets: [{\r\n            data: expensesMoney,\r\n            backgroundColor: expensesColor,\r\n            hoverBackgroundColor: expensesColor\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <Doughnut data={data} width={750} height={200}\r\n            options={\r\n                {\r\n                    legend: {\r\n                        display: false,\r\n                    },\r\n                }}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default MainDiagram;\r\n","export type AddNewExpensesType = {\r\n    type: \"ADD_EXPENSE_ITEM\"\r\n    payload: any\r\n}\r\n\r\nexport const addNewExpenses = (expensesInfo: any): AddNewExpensesType => ({\r\n    type: \"ADD_EXPENSE_ITEM\",\r\n    payload: expensesInfo,\r\n})\r\n\r\n\r\nexport type ToggleAddExpensesWindowType = {\r\n    type: \"TOGGLE_ADD_EXPENSES_WINDOW\"\r\n    payload: boolean\r\n}\r\n\r\nexport const toggleAddExpensesWindow = (e: boolean): ToggleAddExpensesWindowType => ({\r\n    type: \"TOGGLE_ADD_EXPENSES_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\n\r\nexport type InputExpenseSumType = {\r\n    type: \"INPUT_EXPENSE_SUM\",\r\n    payload: {\r\n        id: number\r\n        sum: number\r\n    },\r\n}\r\n\r\nexport const inputExpenseSum = (id: number, sum: number): InputExpenseSumType => ({\r\n    type: \"INPUT_EXPENSE_SUM\",\r\n    payload: {\r\n        id: id,\r\n        sum: sum\r\n    },\r\n})\r\n\r\n\r\nexport type AddIncomeType = {\r\n    type: \"ADD_INCOME\"\r\n    payload: any\r\n}\r\n\r\nexport const addIncome = (incomeInfo: any): AddIncomeType => ({\r\n    type: \"ADD_INCOME\",\r\n    payload: incomeInfo,\r\n})\r\n\r\nexport type ToggleIncomesWindowType = {\r\n    type: \"TOGGLE_ADD_INCOMES_WINDOW\"\r\n    payload: boolean\r\n}\r\n\r\nexport const toggleIncomesWindow = (e: boolean): ToggleIncomesWindowType => ({\r\n    type: \"TOGGLE_ADD_INCOMES_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\n\r\nexport type ToggleInputExpenseAmountWindowType = {\r\n    type: \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\"\r\n    payload: boolean\r\n}\r\n\r\nexport const toggleInputExpenseAmountWindow = (e: boolean): ToggleInputExpenseAmountWindowType => ({\r\n    type: \"TOGGLE_INPUT_EXPENSE_AMOUNT_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\nexport type ToggleHistoryWindowType = {\r\n    type: \"TOGGLE_HISTORY_WINDOW\"\r\n    payload: string\r\n}\r\n\r\nexport const toggleHistoryWindow = (e: string): ToggleHistoryWindowType => ({\r\n    type: \"TOGGLE_HISTORY_WINDOW\",\r\n    payload: e,\r\n})\r\n\r\nexport type AddExpenseHistoryItemType = {\r\n    type: \"ADD_NEW_EXPENSES_HISTORY_ITEM\",\r\n    payload: {\r\n        category: string\r\n        sum: number\r\n        id: number\r\n        date: string\r\n    },\r\n}\r\n\r\nexport const addExpenseHistoryItem = (category: string, sum: number, id: number, date: string): AddExpenseHistoryItemType => ({\r\n    type: \"ADD_NEW_EXPENSES_HISTORY_ITEM\",\r\n    payload: {\r\n        category: category,\r\n        sum: sum,\r\n        id: id,\r\n        date: date\r\n    },\r\n})\r\n\r\nexport type AddIncomesHistoryItemType = {\r\n    type: \"ADD_NEW_INCOMES_HISTORY_ITEM\",\r\n    payload: {\r\n        sum: number\r\n        comment: string\r\n        id: number\r\n        date: string\r\n    },\r\n}\r\n\r\nexport const addIncomesHistoryItem = (sum: number, comment: string, id: number, date: string): AddIncomesHistoryItemType => ({\r\n    type: \"ADD_NEW_INCOMES_HISTORY_ITEM\",\r\n    payload: {\r\n        sum: sum,\r\n        comment: comment,\r\n        id: id,\r\n        date: date\r\n    },\r\n})\r\n\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addNewExpenses> |\r\n    ReturnType<typeof toggleAddExpensesWindow> |\r\n    ReturnType<typeof inputExpenseSum> |\r\n    ReturnType<typeof toggleInputExpenseAmountWindow> |\r\n    ReturnType<typeof addIncome> |\r\n    ReturnType<typeof toggleIncomesWindow> |\r\n    ReturnType<typeof toggleHistoryWindow> |\r\n    ReturnType<typeof addExpenseHistoryItem> |\r\n    ReturnType<typeof addIncomesHistoryItem>\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { Fade } from '@material-ui/core'\r\nimport { TextField } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport s from './AddExpensesWindow.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redusers/rootReducer'\r\nimport { addNewExpenses, toggleAddExpensesWindow } from '../../../actions/actions'\r\n\r\nconst AddExpensesWindow: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    const addExpensesIsOpen = useSelector((state: RootState) => state.addExpensesIsOpen.addExpensesIsOpen)\r\n\r\n    const [inputExpensesName, setInputExpensesName] = useState('');\r\n    const handleChangeForName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputExpensesName(e.target.value);\r\n    };\r\n\r\n    const addExpenses = () => {\r\n        if (inputExpensesName.length > 3) {\r\n            dispatch(addNewExpenses({ expensesName: inputExpensesName, moneySpend: 0, id: itemsExpenses.length, icon: \"https://i.ibb.co/587QCcb/1.png\", bgColor: '#dddddd' }))\r\n            dispatch(toggleAddExpensesWindow(false))\r\n        }\r\n        else {\r\n            alert(\"Слишком короткое название! \")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s[\"AddExpensesWindow\"]}\r\n            onKeyPress={(e) => {\r\n                if (e.key === 'Enter') { addExpenses() }\r\n            }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleAddExpensesWindow(false))\r\n                }\r\n            }}>\r\n            <Modal className={s[\"AddExpensesWindow-Body\"]} open={addExpensesIsOpen}>\r\n                <Fade in={addExpensesIsOpen} timeout={400}>\r\n                    <div className={s[\"AddExpensesWindow-Box\"]}>\r\n                        <div className={s[\"AddExpensesWindow-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleAddExpensesWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"AddExpensesWindow-Title\"]}>Введите название категории</h1>\r\n                        <TextField id=\"outlined-basic\" label=\"Введите название\" variant=\"outlined\"\r\n                            fullWidth required placeholder=\"Например: Хобби\" margin=\"normal\"\r\n                            value={inputExpensesName}\r\n                            onChange={handleChangeForName} autoFocus={true}\r\n                        />\r\n\r\n                        <div style={{ marginTop: \"25px\" }}></div>\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addExpenses}>\r\n                            Добавить категорию\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddExpensesWindow;\r\n","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport { Fade } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\nimport { Input } from '@material-ui/core';\r\n\r\nimport s from './InputOfExpenseAmount.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redusers/rootReducer'\r\nimport { addExpenseHistoryItem, inputExpenseSum, toggleInputExpenseAmountWindow } from '../../../actions/actions';\r\n\r\nconst InputOfExpenseAmount: React.FC<{ curentItemId: number, curentCategory: string }> = ({ curentItemId, curentCategory }) => {\r\n    const dispatch = useDispatch()\r\n    const inputExpenseAmountIsOpen = useSelector((state: RootState) => state.inputExpenseAmountWindow.inputExpenseAmountWindow)\r\n    const expensesHistoryArr = useSelector((state: RootState) => state.historyExpenses.historyExpensesList)\r\n\r\n    const [inputExpensesSum, setInputExpensesSum] = useState('');\r\n    const handleChangeForSum = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputExpensesSum(e.target.value)\r\n    }\r\n\r\n\r\n    const addExpenses = () => {\r\n        if (parseInt(inputExpensesSum) <= 0 || isNaN(parseInt(inputExpensesSum))) {\r\n            alert(\"Введите сумму больше нуля\")\r\n        }\r\n        else if (parseInt(inputExpensesSum) > 1000000) {\r\n            alert(\"Слишком большая сумма\")\r\n        }\r\n        else {\r\n            dispatch(inputExpenseSum(curentItemId, parseInt(inputExpensesSum)))\r\n\r\n            let date = new Date()\r\n            let month = date.getMonth() + 1\r\n\r\n            let dateNewFormat = \"\" + date.getDate() + \" \" + month + \" \" + date.getFullYear()\r\n            dispatch(addExpenseHistoryItem(curentCategory, parseInt(inputExpensesSum), expensesHistoryArr.length, dateNewFormat))\r\n\r\n            dispatch(toggleInputExpenseAmountWindow(false))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s[\"InputOfExpenseAmount\"]}\r\n            onKeyPress={(e) => { if (e.key === 'Enter') { addExpenses() } }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleInputExpenseAmountWindow(false))\r\n                }\r\n            }} >\r\n\r\n            <Modal className={s[\"InputOfExpenseAmount-Body\"]} open={inputExpenseAmountIsOpen}>\r\n                <Fade in={true} timeout={400}>\r\n                    <div className={s[\"InputOfExpenseAmount-Box\"]}>\r\n                        <div className={s[\"InputOfExpenseAmount-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleInputExpenseAmountWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"InputOfExpenseAmount-Title\"]}>Введите сумму которую вы потратили</h1>\r\n\r\n                        <Input className={s[\"InputOfExpenseAmount-Input\"]} placeholder=\"Введите сумму\" autoFocus={true}\r\n                            type=\"number\" required\r\n                            value={inputExpensesSum} onChange={handleChangeForSum} />\r\n\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addExpenses}>\r\n                            Отправить сумму\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default InputOfExpenseAmount;\r\n","import React, { useState } from 'react'\r\nimport { Fade, TextField, Button, Modal } from '@material-ui/core'\r\n\r\nimport s from '../ItemsExpenses/AddExpensesWindow/AddExpensesWindow.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redusers/rootReducer'\r\nimport { addIncome, addIncomesHistoryItem, toggleIncomesWindow } from '../../actions/actions'\r\n\r\nconst AddIncomesWindow: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const incomesList = useSelector((state: RootState) => state.incomesList.incomes)\r\n    const incomeWindowIsOpen = useSelector((state: RootState) => state.incomesWindow.isOpen)\r\n\r\n    const [sumIncome, setSumIncome] = useState('');\r\n    const handleChangeForSum = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSumIncome(e.target.value)\r\n    };\r\n\r\n    const [commentIncome, setCommentIncome] = useState('');\r\n    const handleChangeForComment = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCommentIncome(e.target.value)\r\n    }\r\n\r\n    const addIncomeHandler = () => {\r\n        if (parseInt(sumIncome) <= 0 || isNaN(parseInt(sumIncome))) {\r\n            alert(\"Введите сумму больше нуля\")\r\n        }\r\n        else if (parseInt(sumIncome) > 1000000) {\r\n            alert(\"Слишком большая сумма\")\r\n        }\r\n        else {\r\n            let date = new Date()\r\n            let month = date.getMonth() + 1\r\n\r\n            let dateNewFormat = \"\" + date.getDate() + \" \" + month + \" \" + date.getFullYear()\r\n\r\n            dispatch(addIncome({ moneyIncome: parseInt(sumIncome), id: incomesList.length, comment: commentIncome }))\r\n            dispatch(addIncomesHistoryItem(parseInt(sumIncome), commentIncome, incomesList.length, dateNewFormat))\r\n            dispatch(toggleIncomesWindow(false))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s[\"AddExpensesWindow\"]}\r\n            onKeyPress={(e) => {\r\n                if (e.key === 'Enter') { addIncomeHandler() }\r\n            }}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleIncomesWindow(false))\r\n                }\r\n            }}>\r\n            <Modal className={s[\"AddExpensesWindow-Body\"]} open={incomeWindowIsOpen}>\r\n                <Fade in={incomeWindowIsOpen} timeout={400} style={{ height: 350 + \"px\" }} >\r\n                    <div className={s[\"AddExpensesWindow-Box\"]}>\r\n                        <div className={s[\"AddExpensesWindow-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleIncomesWindow(false))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"AddExpensesWindow-Title\"]}>Доход</h1>\r\n\r\n                        <TextField id=\"outlined-basic\" label=\"Введите сумму\" variant=\"outlined\"\r\n                            fullWidth required placeholder=\"Сумма\" margin=\"normal\"\r\n                            value={sumIncome}\r\n                            onChange={handleChangeForSum} autoFocus={true}\r\n                        />\r\n                        <TextField id=\"outlined-basic\" label=\"Введите комментарий\" variant=\"outlined\"\r\n                            fullWidth placeholder=\"Комментарий\" margin=\"normal\"\r\n                            value={commentIncome}\r\n                            onChange={handleChangeForComment}\r\n                        />\r\n\r\n                        <div style={{ marginTop: \"25px\" }}></div>\r\n                        <Button variant=\"contained\" size=\"large\" onClick={addIncomeHandler}>\r\n                            Добавить доход\r\n                                </Button>\r\n\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddIncomesWindow;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../redusers/rootReducer';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst ExpensesHistory: React.FC = () => {\r\n    const classes = useStyles();\r\n    const expensesHistoryArr = useSelector((state: RootState) => state.historyExpenses.historyExpensesList)\r\n    const rows = expensesHistoryArr;\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Категория</TableCell>\r\n                        <TableCell align=\"left\">Сумма</TableCell>\r\n                        <TableCell align=\"left\">Дата</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {expensesHistoryArr.length > 0 &&\r\n                        rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.category}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">-{row.sum}</TableCell>\r\n                                <TableCell align=\"left\">{row.date}</TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                    {expensesHistoryArr.length === 0 &&\r\n                        <h4 style={{ display: 'flex', margin: 0, padding: 10 + 'px' }}>\r\n                            Здесь пока  ничего нету, добавьте свою первую трату\r\n                            </h4>\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer >\r\n    );\r\n}\r\n\r\nexport default ExpensesHistory","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../redusers/rootReducer';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst IncomesHistory: React.FC = () => {\r\n    const classes = useStyles();\r\n    const incomesHistoryArr = useSelector((state: RootState) => state.historyIncomes.historyIncomesList)\r\n    const rows = incomesHistoryArr;\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Сумма</TableCell>\r\n                        <TableCell align=\"left\">Дата</TableCell>\r\n                        <TableCell align=\"left\">Комментарий</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {incomesHistoryArr.length > 0 &&\r\n                        rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell align=\"left\">+{row.sum}</TableCell>\r\n                                <TableCell align=\"left\">{row.date}</TableCell>\r\n                                <TableCell align=\"left\">{row.comment}</TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                    {incomesHistoryArr.length === 0 &&\r\n                        <h4 style={{ display: 'flex', margin: 0, padding: 10 + 'px' }}>\r\n                            Здесь пока  ничего нету, добавьте свою первую трату\r\n                            </h4>\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer >\r\n    );\r\n}\r\n\r\nexport default IncomesHistory","import React from 'react'\r\nimport { Fade, Modal } from '@material-ui/core'\r\n\r\nimport s from '../ItemsExpenses/AddExpensesWindow/AddExpensesWindow.module.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redusers/rootReducer'\r\nimport { toggleHistoryWindow } from '../../actions/actions'\r\nimport ExpensesHistory from './expensesHistory/expensesHistory'\r\nimport IncomesHistory from './incomesHistory/incomesHistory'\r\n\r\nconst HistoryWindow: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const historyWindowIsOpen = useSelector((state: RootState) => state.historyWindow.isOpen)\r\n\r\n    return (\r\n        <div className={s[\"AddExpensesWindow\"]}\r\n            onClick={(e) => {\r\n                if (!(e.target as Element).className) {\r\n                    dispatch(toggleHistoryWindow('none'))\r\n                }\r\n            }}\r\n        >\r\n            <Modal className={s[\"AddExpensesWindow-Body\"]} open={historyWindowIsOpen === 'expenses'}>\r\n                <Fade in={historyWindowIsOpen === 'expenses'} timeout={400} style={{ height: 'auto', width: 800 + 'px' }} >\r\n                    <div className={s[\"AddExpensesWindow-Box\"]}>\r\n                        <div className={s[\"AddExpensesWindow-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleHistoryWindow('none'))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"AddExpensesWindow-Title\"]}>История трат</h1>\r\n                        <ExpensesHistory />\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            <Modal className={s[\"AddExpensesWindow-Body\"]} open={historyWindowIsOpen === 'incomes'}>\r\n                <Fade in={historyWindowIsOpen === 'incomes'} timeout={400} style={{ height: 'auto', width: 800 + 'px' }} >\r\n                    <div className={s[\"AddExpensesWindow-Box\"]}>\r\n                        <div className={s[\"AddExpensesWindow-CloseIcon\"]}\r\n                            onClick={() => dispatch(toggleHistoryWindow('none'))}>\r\n                            ✕\r\n                            </div>\r\n                        <h1 className={s[\"AddExpensesWindow-Title\"]}>История доходов</h1>\r\n                        <IncomesHistory />\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default HistoryWindow;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from \"../../redusers/rootReducer\"\r\nimport s from \"./itemsExpenses.module.scss\"\r\n\r\nimport AddExpenses from './AddExpenses/AddExpenses'\r\nimport MainDiagram from './MainDiagram/MainDiagram'\r\nimport AddExpensesWindow from './AddExpensesWindow/AddExpensesWindow'\r\nimport { toggleAddExpensesWindow, toggleInputExpenseAmountWindow } from '../../actions/actions'\r\nimport InputOfExpenseAmount from './InputOfExpenseAmount/InputOfExpenseAmount'\r\nimport { ItemsExpensesType } from '../../redusers/itemsExpensesReducer'\r\nimport AddIncomesWindow from '../AddIncomesWindow/AddIncomesWindow'\r\nimport HistoryWindow from '../historyWindow/historyWindow'\r\n\r\nconst ItemsExpenses: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [curentItemForAddSum, setCurentItemForAddSum] = useState(0);\r\n    const [curentCategoryForHistory, setCurentCategory] = useState('');\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    const addExpensesIsOpen = useSelector((state: RootState) => state.addExpensesIsOpen.addExpensesIsOpen)\r\n    const inputExpenseAmountIsOpen = useSelector((state: RootState) => state.inputExpenseAmountWindow.inputExpenseAmountWindow)\r\n    const incomeWindowIsOpen = useSelector((state: RootState) => state.incomesWindow.isOpen)\r\n    const historyWindowIsOpen = useSelector((state: RootState) => state.historyWindow.isOpen)\r\n\r\n    const handlerForExpensesItem = (id: number, category: string) => {\r\n        setCurentItemForAddSum(id)\r\n        setCurentCategory(category)\r\n        dispatch(toggleInputExpenseAmountWindow(true))\r\n    }\r\n\r\n    return (\r\n        <div className={s[\"ItemsExpenses\"]} >\r\n\r\n            {itemsExpenses.length > 0 &&\r\n                itemsExpenses.map(({ expensesName, moneySpend, id, icon, bgColor }: ItemsExpensesType) => {\r\n                    return (\r\n                        <div className={s[\"ItemsExpenses-Item\"]} key={id}>\r\n                            <div className={s[\"ItemsExpenses-Name\"]} >{expensesName}</div>\r\n                            <div className={s[\"ItemsExpenses-WrapForIcon\"]} style={{ backgroundColor: bgColor }}\r\n                                onClick={() => handlerForExpensesItem(id, expensesName)} >\r\n                                <img className={s[\"ItemsExpenses-Icon\"]} src={icon} alt={\"icon\"} />\r\n                            </div>\r\n                            <div className={s[\"ItemsExpenses-Money\"]} >\r\n                                {moneySpend}\r\n                                <span> ₴</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            {inputExpenseAmountIsOpen &&\r\n                <InputOfExpenseAmount\r\n                    curentItemId={curentItemForAddSum}\r\n                    curentCategory={curentCategoryForHistory} />}\r\n\r\n            <div className={s[\"ItemsExpenses-Diagram\"]}>\r\n                <MainDiagram />\r\n            </div>\r\n\r\n            <div onClick={() => dispatch(toggleAddExpensesWindow(true))} >\r\n                {itemsExpenses.length < 9 && <AddExpenses />}\r\n            </div>\r\n\r\n\r\n            {addExpensesIsOpen && <AddExpensesWindow />}\r\n\r\n            {incomeWindowIsOpen && <AddIncomesWindow />}\r\n\r\n            {historyWindowIsOpen && <HistoryWindow />}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default ItemsExpenses;\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport s from \"./Expenses.module.scss\"\nimport ItemsExpenses from '../ItemsExpenses/ItemsExpenses';\n\nconst Expenses = () => {\n  return (\n    <>\n      <CssBaseline />\n      <div className={s.Expenses} >\n        <Container className={s[\"Expenses-Body\"]} maxWidth=\"lg\" >\n          <Paper className={s[\"Expenses-Box\"]} elevation={2} variant=\"outlined\" >\n            <ItemsExpenses />\n          </Paper>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Expenses;\n","import { AppBar, Toolbar, Button, Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleHistoryWindow, toggleIncomesWindow } from '../../actions/actions';\r\nimport { RootState } from \"../../redusers/rootReducer\"\r\nimport s from \"./Header.module.scss\"\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const itemsExpenses = useSelector((state: RootState) => state.itemsExpenses.itemsExpenses)\r\n    let sumExpenses = 0;\r\n    itemsExpenses.map(({ moneySpend }) => {\r\n        sumExpenses += moneySpend\r\n    })\r\n\r\n    const incomesList = useSelector((state: RootState) => state.incomesList.incomes)\r\n    let sumIncomes = 0;\r\n    incomesList.map(({ moneyIncome }) => {\r\n        sumIncomes += moneyIncome\r\n    })\r\n\r\n    return (\r\n        <AppBar color=\"default\" className={s.Header}>\r\n            <Toolbar>\r\n                <Grid container justify=\"space-between\"\r\n                    alignItems=\"center\">\r\n\r\n                    <Grid item className={s[\"Header-Column\"]}>\r\n                        <span className={s[\"Header-Logo\"]}>24Money <span>(demo)</span></span>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            className={s[\"Header-Btn\"]}\r\n                            onClick={() => dispatch(toggleIncomesWindow(true))}\r\n                        >Добавить доходы</Button>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item className={s[\"Header-Column\"]}>\r\n                        <Button variant=\"outlined\" className={s[\"Header-Btn\"]}\r\n                            onClick={() => dispatch(toggleHistoryWindow('expenses'))}\r\n                        >История трат</Button>\r\n\r\n                        <Button variant=\"outlined\" className={s[\"Header-Btn\"]}\r\n                            onClick={() => dispatch(toggleHistoryWindow('incomes'))}\r\n                        >История доходов</Button>\r\n                        <span className={s[\"Header-Label\"]}>Расходы: <b>-{sumExpenses}₴</b></span>\r\n                        <span className={s[\"Header-Label\"]}> Доходы: <b>+{sumIncomes}₴</b> </span>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar >\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { Provider } from 'react-redux';\r\nimport { store } from \"./store\"\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport Header from './components/Header/Header';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Header />\r\n      <Expenses />\r\n    </Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputOfExpenseAmount-Box\":\"InputOfExpenseAmount_InputOfExpenseAmount-Box__31nwi\",\"InputOfExpenseAmount-CloseIcon\":\"InputOfExpenseAmount_InputOfExpenseAmount-CloseIcon__3c7hJ\",\"InputOfExpenseAmount-Title\":\"InputOfExpenseAmount_InputOfExpenseAmount-Title__1DSkr\",\"InputOfExpenseAmount-Input\":\"InputOfExpenseAmount_InputOfExpenseAmount-Input__3ZL3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Expenses\":\"Expenses_Expenses__1WDzg\",\"Expenses-Body\":\"Expenses_Expenses-Body__2JdEa\",\"Expenses-Box\":\"Expenses_Expenses-Box__27I4d\"};"],"sourceRoot":""}